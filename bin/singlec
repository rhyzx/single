#!/usr/bin/env node
var single  = require('../')
  , fs      = require('fs')
;


//define options and usage
var argv = require('optimist').wrap(80)
    .usage([
        'Usage: singlec [options] [ -o script.js ] files.js..'
      , '   or: singlec [options] [ -o script.js ] -i single.json'
    ].join('\n'))
    
    .options('outfile', {
        alias   : 'o'
      , type    : 'string'
      , describe: 'Place output in file'
    })
    .options('input-file', {
        alias   : 'i'
      , type    : 'string'
      , describe: 'Define options and file list in a json file\n'
                + 'Use "single.json" when no files inputed'
      , default : 'single.json'
    })
    .options('watch', {
        alias   : 'w'
      , type    : 'boolean'
      , describe: 'Watch mode'
    })
    .options('compress', {
        alias   : 'x'
      , type    : 'boolean'
      , describe: 'Compress with UglifyJS'
    })
    .options('charset', {
        type    : 'string'
      , describe: 'Charset of files'
    })
    /*.options('v', {
        alias   : 'verbose'
      , type    : 'boolean'
      , describe: 'Verbose'
    })*/
    .options('version', {
        type    : 'boolean'
      , describe: 'Print version'
    })
    .options('help', {
        alias   : 'h'
      , type    : 'boolean'
      , describe: 'Print help'
    })
    .check(function (argv) {
        if (argv.version) throw single.version;
    })
    .check(function (argv) {
        if (argv.help) throw '';
        if (
            argv._.length < 1 &&
            !fs.existsSync(argv.input)
        ) throw 'No files input';
    })
    .argv
;


//main
single(argv._.length ? argv._ : argv.i, {
    outfile : argv.outfile
  , watch   : argv.watch
  , compress: argv.compress
  , charset : argv.charset
});
